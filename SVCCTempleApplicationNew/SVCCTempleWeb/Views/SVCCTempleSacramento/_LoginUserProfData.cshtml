@model SVCCTempleWeb.Models.LoginUserProfModel
<style>
    #LoginEmailAddress-error, #LoginPassword-error, #CaptchaAnswerLogin-error {
        color: #ff0000;
        display: block;
        font-size: 15px;
        font-weight: bold;
    }
</style>
<div id="divLoginUserProfScrollIntoView" style="font-weight: bold;"></div>
@if (Model != null && Model.ResponseObjectModel != null && !string.IsNullOrWhiteSpace(Model.ResponseObjectModel.ValidationSummaryMessage))
{
    <div class="row validationSummaryMessage" style="text-align: left">
        @Model.ResponseObjectModel.ValidationSummaryMessage
    </div>
}
@if (!ViewData.ModelState.IsValid)
{
    <div class="row" style="text-align: left">
        @Html.Raw(HttpUtility.HtmlDecode(Html.ValidationSummary(false, "", new { @class = "validationSummaryErrors" }).ToHtmlString()))
    </div>
}
@if (Model != null && Model.ResponseObjectModel != null)
{
    <div class="row" style="text-align: left">
        @Html.Partial("_ResponseObject", Model.ResponseObjectModel)
    </div>
}
<div class="row" style="padding-left: 18px; padding-right: 18px; text-align: left;">
    @Html.LabelFor(m => m.LoginEmailAddress, new { @class = "col-form-label" })&nbsp;<span style="color: #0000ff; font-weight: bold;">(Required)</span>
    @Html.TextBoxFor(m => m.LoginEmailAddress, new { @class = "form-control validate", placeholder = "Enter " + @Html.DisplayNameFor(m => m.LoginEmailAddress), style = "width: 80%;" })
    @Html.Raw(HttpUtility.HtmlDecode(Html.ValidationMessageFor(m => m.LoginEmailAddress, "", new { id = "LoginEmailAddress-error" }).ToHtmlString()))
</div>

<div class="row" style="padding-left: 18px; padding-right: 18px; text-align: left;">
    @Html.LabelFor(m => m.LoginPassword, new { @class = "col-form-label" })&nbsp;<span style="color: #0000ff; font-weight: bold;">(Required)</span>
    @Html.TextBoxFor(m => m.LoginPassword, new { @class = "form-control validate", placeholder = "Enter " + @Html.DisplayNameFor(m => m.LoginPassword), style = "width: 80%;", @type = "password" })
    @Html.Raw(HttpUtility.HtmlDecode(Html.ValidationMessageFor(m => m.LoginPassword, "", new { id = "LoginPassword-error" }).ToHtmlString()))
</div>

<div class="row" style="padding-left: 18px; padding-right: 18px; text-align: left;">
    @Html.LabelFor(m => m.CaptchaAnswerLogin, new { @class = "col-form-label" })&nbsp;- Sum of <span style="color: #ff0000;">@Model.CaptchaNumberLogin0</span> & <span style="color: #ff0000;">@Model.CaptchaNumberLogin1</span><span style="color: #0000ff; font-weight: bold;">? (Required)</span>
    @Html.TextBoxFor(m => m.CaptchaAnswerLogin, null, new { @class = "form-control", placeholder = @Model.CaptchaNumberLogin0 + " + " + @Model.CaptchaNumberLogin1 + " =?", style = "width: 80%;" })
    @Html.Raw(HttpUtility.HtmlDecode(Html.ValidationMessageFor(m => m.CaptchaAnswerLogin, "", new { id = "CaptchaAnswerLogin-error" }).ToHtmlString()))
</div>
